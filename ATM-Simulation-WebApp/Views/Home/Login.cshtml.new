@{
    ViewData["Title"] = "Login";
    Layout = "_Layout";
}

@section Styles {
    <style>
        /* Login Page Specific Styles */
        .login-page {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem 0;
            background: linear-gradient(135deg, #fff3d1 0%, #f0e9fa 100%);
        }
        
        .login-container {
            max-width: 420px;
            width: 100%;
            padding: 0 15px;
            margin: 0 auto;
        }
        
        .login-card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            border: 1px solid rgba(0, 0, 0, 0.1);
        }
        
        .login-header {
            background: linear-gradient(135deg, #7C5CF6 0%, #9E7BFF 100%);
            color: white;
            padding: 2rem;
            text-align: center;
        }
        
        .login-header h2 {
            margin: 0;
            font-size: 1.75rem;
            font-weight: 700;
        }
        
        .login-body {
            padding: 2rem;
        }
        
        .form-control:focus {
            border-color: #9E7BFF;
            box-shadow: 0 0 0 0.25rem rgba(158, 123, 255, 0.25);
        }
        
        .btn-login {
            background: linear-gradient(135deg, #7C5CF6 0%, #9E7BFF 100%);
            border: none;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            color: white;
            width: 100%;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .btn-login:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(124, 92, 246, 0.3);
        }
        
        .forgot-pin {
            color: #7C5CF6;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.2s ease;
        }
        
        .forgot-pin:hover {
            color: #5e45b3;
        }
        
        .input-group-text {
            background-color: #FFF3D1;
            border: 1px solid #E9ECEF;
        }
        
        .form-floating > label {
            color: #6C757D;
        }
        
        .form-floating > .form-control:focus ~ label,
        .form-floating > .form-control:not(:placeholder-shown) ~ label {
            color: #7C5CF6;
        }
        
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .error-message {
            color: #F56565;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
    </style>
}

<div class="login-page">
    <div class="login-container">
        <div class="login-card fade-in">
            <div class="login-header">
                <h2>Welcome Back</h2>
                <p class="mb-0">Sign in to your account</p>
            </div>
            <div class="login-body">
                @if (ViewBag.Error != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @ViewBag.Error
                    </div>
                }
                
                <form method="post" class="needs-validation" novalidate>
                    <div class="mb-3">
                        <div class="form-floating">
                            <input type="text" class="form-control" id="cardNumber" name="cardNumber" placeholder="Card Number" required 
                                   oninput="formatCardNumber(this)" maxlength="19" pattern="\d{4} \d{4} \d{4} \d{4}">
                            <label for="cardNumber">Card Number</label>
                            <div class="invalid-feedback">
                                Please enter a valid 16-digit card number
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-floating">
                            <div class="input-group">
                                <input type="password" class="form-control" id="pin" name="pin" placeholder="PIN" required minlength="4" maxlength="4" pattern="\d{4}">
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                                <label for="pin">PIN</label>
                            </div>
                            <div class="invalid-feedback">
                                Please enter your 4-digit PIN
                            </div>
                        </div>
                    </div>
                    
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="rememberMe" name="rememberMe">
                            <label class="form-check-label" for="rememberMe">
                                Remember me
                            </label>
                        </div>
                        <a href="#" class="forgot-pin">Forgot PIN?</a>
                    </div>
                    
                    <button type="submit" class="btn btn-login mb-3">
                        <i class="bi bi-box-arrow-in-right me-2"></i> Sign In
                    </button>
                    
                    <div class="text-center mt-3">
                        <p class="text-muted small mb-0">
                            <i class="bi bi-shield-lock me-1"></i> Your security is our top priority
                        </p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Format card number with spaces
        function formatCardNumber(input) {
            // Remove all non-digits
            let value = input.value.replace(/\D/g, '');
            
            // Add space after every 4 digits (max 16 digits)
            value = value.replace(/(\d{4})(?=\d)/g, '$1 ');
            
            // Update the input value (max 19 chars: 16 digits + 3 spaces)
            input.value = value.trim().substring(0, 19);
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle password visibility
            const togglePassword = document.querySelector('#togglePassword');
            const password = document.querySelector('#pin');
            
            if (togglePassword && password) {
                togglePassword.addEventListener('click', function() {
                    const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
                    password.setAttribute('type', type);
                    this.querySelector('i').classList.toggle('bi-eye');
                    this.querySelector('i').classList.toggle('bi-eye-slash');
                });
            }
            
            // Add input formatting for card number
            const cardNumberInput = document.querySelector('#cardNumber');
            if (cardNumberInput) {
                cardNumberInput.addEventListener('input', function(e) {
                    formatCardNumber(e.target);
                });
            }
            
            // Form validation
            const form = document.querySelector('.needs-validation');
            if (form) {
                form.addEventListener('submit', function(event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            }
        });
    </script>
}
